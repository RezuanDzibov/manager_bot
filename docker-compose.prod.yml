version: "3"

services:
  web:
    build:
      context: ./web
      dockerfile: Dockerfile.prod
    env_file: ./.env
    depends_on:
      - db
    environment:
      SQL_HOST: "db"
    command: bash -c "cd web && gunicorn config.wsgi:application --bind 0.0.0.0:8000"
    expose:
      - 8000
    volumes:
      - static_volume:/home/app/staticfiles
      - media_volume:/home/app/mediafiles
    ports:
      - "8000:8000"
#  nginx:
#    build: ./nginx
#    ports:
#      - "80:80"
#      - "443:443"
#    depends_on:
#      - web
#    volumes:
#      - static_volume:/home/app/staticfiles
#      - media_volume:/home/app/mediafiles
#      - etc-letsencrypt:/etc/letsencrypt
#      - www-html:/var/www/html
#  certbot:
#    image: certbot/certbot
#    depends_on:
#      - nginx
#    container_name: certbot
#    volumes:
#      - etc-letsencrypt:/etc/letsencrypt
#      - www-html:/var/www/html
#    command: certonly --webroot -w /var/www/html --force-renewal --email rezuan.dzbov@gmail.com -d www.rezaundzibov.online --agree-tos
  bot:
    build: ./bot
    environment:
      API_URL: "http://nginx:80/"
    command: bash -c "cd bot && python main.py"
    depends_on:
      - nginx
    volumes:
      - media_volume:/home/app/mediafiles
  db:
    image: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_USER: ${SQL_USER}
      POSTGRES_PASSWORD: ${SQL_PASSWORD}
      POSTGRES_DB: ${SQL_DATABASE}
      POSTGRES_PORT: ${SQL_PORT}
    ports:
      - "5432:5432"
  nginx:
    restart: unless-stopped
    image: staticfloat/nginx-certbot
    ports:
      - "80:80"
      - "443:443"
    environment:
      CERTBOT_EMAIL: rezuan.dzbov@gmail.com.com
    volumes:
      - ./nginx:/etc/nginx/user.conf.d:ro
      - letsencrypt:/etc/letsencrypt


volumes:
  static_volume:
  media_volume:
  postgres_data:
  letsencrypt: